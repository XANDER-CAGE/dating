// scripts/seed-geolocation-data.ts
import { NestFactory } from '@nestjs/core';
import { AppModule } from '../src/app.module';
import { UsersService } from '../src/users/users.service';
import { ProfilesService } from '../src/profiles/profiles.service';
import { AuthService } from '../src/auth/auth.service';
import { Gender, InterestedIn } from '../src/profiles/entities/profile.entity';

interface TestUser {
  email: string;
  password: string;
  profile: {
    name: string;
    age: number;
    gender: Gender;
    interestedIn: InterestedIn;
    bio: string;
    latitude: number;
    longitude: number;
    city: string;
    country: string;
    interests: string[];
    photos: string[];
  };
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –ú–æ—Å–∫–≤—ã
const testUsers: TestUser[] = [
  {
    email: 'anna.moscow@test.com',
    password: 'Test123456',
    profile: {
      name: '–ê–Ω–Ω–∞',
      age: 25,
      gender: Gender.FEMALE,
      interestedIn: InterestedIn.MALE,
      bio: '–õ—é–±–ª—é –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ —Ü–µ–Ω—Ç—Ä—É –ú–æ—Å–∫–≤—ã –∏ –∫–æ—Ñ–µ –≤ —É—é—Ç–Ω—ã—Ö –∫–∞—Ñ–µ',
      latitude: 55.7558, // –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å
      longitude: 37.6176,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['–∫–æ—Ñ–µ', '–ø—Ä–æ–≥—É–ª–∫–∏', '–º—É–∑–µ–∏', '—Ç–µ–∞—Ç—Ä'],
      photos: ['https://i.pravatar.cc/400?img=1'],
    },
  },
  {
    email: 'maria.arbat@test.com',
    password: 'Test123456',
    profile: {
      name: '–ú–∞—Ä–∏—è',
      age: 28,
      gender: Gender.FEMALE,
      interestedIn: InterestedIn.MALE,
      bio: '–ñ–∏–≤—É —Ä—è–¥–æ–º —Å –ê—Ä–±–∞—Ç–æ–º, —Ä–∞–±–æ—Ç–∞—é –≤ IT',
      latitude: 55.7522, // –ê—Ä–±–∞—Ç
      longitude: 37.5936,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['IT', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∫–Ω–∏–≥–∏', '–π–æ–≥–∞'],
      photos: ['https://i.pravatar.cc/400?img=2'],
    },
  },
  {
    email: 'alex.sokolniki@test.com',
    password: 'Test123456',
    profile: {
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      age: 30,
      gender: Gender.MALE,
      interestedIn: InterestedIn.FEMALE,
      bio: '–õ—é–±–ª—é –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ –ø—Ä–∏—Ä–æ–¥—É. –ß–∞—Å—Ç–æ –≤ –°–æ–∫–æ–ª—å–Ω–∏–∫–∞—Ö',
      latitude: 55.7935, // –°–æ–∫–æ–ª—å–Ω–∏–∫–∏
      longitude: 37.6703,
      city: '–ú–æ—Å–∫–≤–∞', 
      country: '–†–æ—Å—Å–∏—è',
      interests: ['—Å–ø–æ—Ä—Ç', '–≤–µ–ª–æ—Å–∏–ø–µ–¥', '–ø—Ä–∏—Ä–æ–¥–∞', '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è'],
      photos: ['https://i.pravatar.cc/400?img=3'],
    },
  },
  {
    email: 'kate.msu@test.com',
    password: 'Test123456',
    profile: {
      name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞',
      age: 22,
      gender: Gender.FEMALE,
      interestedIn: InterestedIn.MALE,
      bio: '–°—Ç—É–¥–µ–Ω—Ç–∫–∞ –ú–ì–£, –∏–∑—É—á–∞—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é',
      latitude: 55.7033, // –ú–ì–£
      longitude: 37.5302,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è', '–Ω–∞—É–∫–∞', '—á—Ç–µ–Ω–∏–µ', '–º—É–∑—ã–∫–∞'],
      photos: ['https://i.pravatar.cc/400?img=4'],
    },
  },
  {
    email: 'dmitry.vdnh@test.com',
    password: 'Test123456',
    profile: {
      name: '–î–º–∏—Ç—Ä–∏–π',
      age: 27,
      gender: Gender.MALE,
      interestedIn: InterestedIn.FEMALE,
      bio: '–ò–Ω–∂–µ–Ω–µ—Ä, –∂–∏–≤—É —Ä—è–¥–æ–º —Å –í–î–ù–•',
      latitude: 55.8215, // –í–î–ù–•
      longitude: 37.6398,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–∏–Ω–∂–µ–Ω–µ—Ä–∏—è', '–≤—ã—Å—Ç–∞–≤–∫–∏', '–∫–æ—Å–º–æ—Å'],
      photos: ['https://i.pravatar.cc/400?img=5'],
    },
  },
  {
    email: 'elena.spb@test.com',
    password: 'Test123456',
    profile: {
      name: '–ï–ª–µ–Ω–∞',
      age: 26,
      gender: Gender.FEMALE,
      interestedIn: InterestedIn.MALE,
      bio: '–ò–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞, –ª—é–±–ª—é –±–µ–ª—ã–µ –Ω–æ—á–∏ –∏ —Ä–∞–∑–≤–æ–¥–Ω—ã–µ –º–æ—Å—Ç—ã',
      latitude: 59.9311, // –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ —Ü–µ–Ω—Ç—Ä
      longitude: 30.3609,
      city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞', '–∏—Å—Ç–æ—Ä–∏—è', '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–±–∞–ª–µ—Ç'],
      photos: ['https://i.pravatar.cc/400?img=6'],
    },
  },
  {
    email: 'igor.moscow@test.com',
    password: 'Test123456',
    profile: {
      name: '–ò–≥–æ—Ä—å',
      age: 29,
      gender: Gender.MALE,
      interestedIn: InterestedIn.FEMALE,
      bio: '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å, –∂–∏–≤—É –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã',
      latitude: 55.7611, // –¢–≤–µ—Ä—Å–∫–∞—è
      longitude: 37.6186,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['–±–∏–∑–Ω–µ—Å', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã', '–∞–≤—Ç–æ–º–æ–±–∏–ª–∏'],
      photos: ['https://i.pravatar.cc/400?img=7'],
    },
  },
  {
    email: 'vera.taganka@test.com',
    password: 'Test123456',
    profile: {
      name: '–í–µ—Ä–∞',
      age: 24,
      gender: Gender.FEMALE,
      interestedIn: InterestedIn.MALE,
      bio: '–•—É–¥–æ–∂–Ω–∏—Ü–∞, –∂–∏–≤—É –≤ —Ä–∞–π–æ–Ω–µ –¢–∞–≥–∞–Ω–∫–∏',
      latitude: 55.7423, // –¢–∞–≥–∞–Ω–∫–∞
      longitude: 37.6534,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: ['–∂–∏–≤–æ–ø–∏—Å—å', '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–≤—ã—Å—Ç–∞–≤–∫–∏', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'],
      photos: ['https://i.pravatar.cc/400?img=8'],
    },
  },
];

async function seedGeolocationData() {
  const app = await NestFactory.createApplicationContext(AppModule);
  
  const authService = app.get(AuthService);
  const profilesService = app.get(ProfilesService);

  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π...');

  for (const testUser of testUsers) {
    try {
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log(`üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${testUser.profile.name} (${testUser.email})`);
      
      const authResult = await authService.register({
        email: testUser.email,
        password: testUser.password,
      });

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      console.log(`üë§ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è: ${testUser.profile.name}`);
      
      await profilesService.create(authResult.user.id, testUser.profile);

      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å: ${testUser.profile.name} –≤ ${testUser.profile.city}`);
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${testUser.email}:`, error.message);
    }
  }

  console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìç –°–æ–∑–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –ª–æ–∫–∞—Ü–∏—è—Ö:');
  console.log('‚Ä¢ –ú–æ—Å–∫–≤–∞ (—Ü–µ–Ω—Ç—Ä): –ê–Ω–Ω–∞, –ò–≥–æ—Ä—å');
  console.log('‚Ä¢ –ú–æ—Å–∫–≤–∞ (–ê—Ä–±–∞—Ç): –ú–∞—Ä–∏—è');  
  console.log('‚Ä¢ –ú–æ—Å–∫–≤–∞ (–°–æ–∫–æ–ª—å–Ω–∏–∫–∏): –ê–ª–µ–∫—Å–∞–Ω–¥—Ä');
  console.log('‚Ä¢ –ú–æ—Å–∫–≤–∞ (–ú–ì–£): –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞');
  console.log('‚Ä¢ –ú–æ—Å–∫–≤–∞ (–í–î–ù–•): –î–º–∏—Ç—Ä–∏–π');
  console.log('‚Ä¢ –ú–æ—Å–∫–≤–∞ (–¢–∞–≥–∞–Ω–∫–∞): –í–µ—Ä–∞');
  console.log('‚Ä¢ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥: –ï–ª–µ–Ω–∞');
  
  console.log('\nüß™ –ü—Ä–∏–º–µ—Ä—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('1. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ anna.moscow@test.com');
  console.log('2. –°–¥–µ–ª–∞–π—Ç–µ –ø–æ–∏—Å–∫ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —Ü–µ–Ω—Ç—Ä–∞ –ú–æ—Å–∫–≤—ã');
  console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ä–∞–¥–∏—É—Å—ã –ø–æ–∏—Å–∫–∞ (1–∫–º, 5–∫–º, 25–∫–º)');
  console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É "–ú–æ—Å–∫–≤–∞"');

  await app.close();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function generateRandomUsers(count: number = 20): TestUser[] {
  const names = {
    female: ['–°–æ—Ñ–∏—è', '–ê–Ω–∞—Å—Ç–∞—Å–∏—è', '–î–∞—Ä—å—è', '–ü–æ–ª–∏–Ω–∞', '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞', '–í–∏–∫—Ç–æ—Ä–∏—è', '–ï–ª–∏–∑–∞–≤–µ—Ç–∞', '–ö—Å–µ–Ω–∏—è'],
    male: ['–ê–ª–µ–∫—Å–∞–Ω–¥—Ä', '–ú–∞–∫—Å–∏–º', '–ê—Ä—Ç—ë–º', '–ú–∏—Ö–∞–∏–ª', '–î–∞–Ω–∏–∏–ª', '–ù–∏–∫–∏—Ç–∞', '–ò–ª—å—è', '–ê–Ω–¥—Ä–µ–π'],
  };
  
  const cities = [
    { name: '–ú–æ—Å–∫–≤–∞', lat: 55.7558, lng: 37.6176, country: '–†–æ—Å—Å–∏—è' },
    { name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', lat: 59.9311, lng: 30.3609, country: '–†–æ—Å—Å–∏—è' },
    { name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', lat: 56.8431, lng: 60.6454, country: '–†–æ—Å—Å–∏—è' },
    { name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', lat: 55.0084, lng: 82.9357, country: '–†–æ—Å—Å–∏—è' },
    { name: '–ö–∞–∑–∞–Ω—å', lat: 55.8304, lng: 49.0661, country: '–†–æ—Å—Å–∏—è' },
  ];

  const interests = [
    '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '—Å–ø–æ—Ä—Ç', '–º—É–∑—ã–∫–∞', '–∫–∏–Ω–æ', '–∫–Ω–∏–≥–∏', '–∫—É–ª–∏–Ω–∞—Ä–∏—è', 
    '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '—Ç–∞–Ω—Ü—ã', '–π–æ–≥–∞', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–¥–∏–∑–∞–π–Ω',
    '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '—Ç–µ–∞—Ç—Ä', '–∫–æ–Ω—Ü–µ—Ä—Ç—ã', '–ø—Ä–∏—Ä–æ–¥–∞', '–≤–µ–ª–æ—Å–∏–ø–µ–¥'
  ];

  const users: TestUser[] = [];

  for (let i = 0; i < count; i++) {
    const gender = Math.random() > 0.5 ? Gender.FEMALE : Gender.MALE;
    const interestedIn = gender === Gender.FEMALE ? InterestedIn.MALE : InterestedIn.FEMALE;
    const name = names[gender][Math.floor(Math.random() * names[gender].length)];
    const city = cities[Math.floor(Math.random() * cities.length)];
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ä–∞–¥–∏—É—Å–µ 15–∫–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞
    const radiusKm = 15;
    const radiusDeg = radiusKm / 111;
    const angle = Math.random() * 2 * Math.PI;
    const distance = Math.random() * radiusDeg;
    
    const latitude = city.lat + (distance * Math.cos(angle));
    const longitude = city.lng + (distance * Math.sin(angle));
    
    const userInterests = interests
      .sort(() => 0.5 - Math.random())
      .slice(0, Math.floor(Math.random() * 4) + 2);

    users.push({
      email: `test${i + 1}@example.com`,
      password: 'Test123456',
      profile: {
        name,
        age: Math.floor(Math.random() * 15) + 20, // 20-35 –ª–µ—Ç
        gender,
        interestedIn,
        bio: `–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç ${name}, –∂–∏–≤—É –≤ ${city.name}. –õ—é–±–ª—é ${userInterests.slice(0, 2).join(' –∏ ')}.`,
        latitude: Math.round(latitude * 10000) / 10000,
        longitude: Math.round(longitude * 10000) / 10000,
        city: city.name,
        country: city.country,
        interests: userInterests,
        photos: [`https://i.pravatar.cc/400?img=${i + 10}`],
      },
    });
  }

  return users;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export { seedGeolocationData, generateRandomUsers, testUsers };

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  seedGeolocationData().catch(console.error);
}