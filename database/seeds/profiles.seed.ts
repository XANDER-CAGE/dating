import { DataSource } from 'typeorm';
import { Profile, Gender, InterestedIn } from '../../src/profiles/entities/profile.entity';
import { User } from '../../src/users/entities/user.entity';

interface SeedProfile {
  userEmail: string; // –°–≤—è–∑—ã–≤–∞–µ–º –ø–æ email
  name: string;
  age: number;
  gender: Gender;
  interestedIn: InterestedIn;
  bio: string;
  latitude?: number;
  longitude?: number;
  city?: string;
  country?: string;
  interests: string[];
  photos: string[];
  maxDistance?: number;
  isPremium?: boolean;
}

const SEED_PROFILES: SeedProfile[] = [
  {
    userEmail: 'anna.moscow@test.com',
    name: '–ê–Ω–Ω–∞',
    age: 25,
    gender: Gender.FEMALE,
    interestedIn: InterestedIn.MALE,
    bio: '–õ—é–±–ª—é –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ –ú–æ—Å–∫–≤–µ, –∫–æ—Ñ–µ –∏ —Ö–æ—Ä–æ—à–∏–µ –∫–Ω–∏–≥–∏. –†–∞–±–æ—Ç–∞—é –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ.',
    latitude: 55.7558,
    longitude: 37.6176,
    city: '–ú–æ—Å–∫–≤–∞',
    country: '–†–æ—Å—Å–∏—è',
    interests: ['–∫–æ—Ñ–µ', '–∫–Ω–∏–≥–∏', '–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è'],
    photos: ['https://i.pravatar.cc/400?img=1'],
    maxDistance: 25,
    isPremium: false,
  },
  {
    userEmail: 'alex.moscow@test.com',
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
    age: 28,
    gender: Gender.MALE,
    interestedIn: InterestedIn.FEMALE,
    bio: 'IT-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —É–≤–ª–µ–∫–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º –∏ –∞–∫—Ç–∏–≤–Ω—ã–º –æ—Ç–¥—ã—Ö–æ–º. –ò—â—É —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è.',
    latitude: 55.7522,
    longitude: 37.5936,
    city: '–ú–æ—Å–∫–≤–∞',
    country: '–†–æ—Å—Å–∏—è',
    interests: ['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '—Å–ø–æ—Ä—Ç', '–≤–µ–ª–æ—Å–∏–ø–µ–¥', '–∫–∏–Ω–æ', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'],
    photos: ['https://i.pravatar.cc/400?img=3'],
    maxDistance: 30,
    isPremium: true,
  },
  {
    userEmail: 'maria.spb@test.com',
    name: '–ú–∞—Ä–∏—è',
    age: 26,
    gender: Gender.FEMALE,
    interestedIn: InterestedIn.MALE,
    bio: '–î–∏–∑–∞–π–Ω–µ—Ä –∏–∑ –ü–∏—Ç–µ—Ä–∞. –õ—é–±–ª—é –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ç–µ–∞—Ç—Ä—ã –∏ –±–µ–ª—ã–µ –Ω–æ—á–∏.',
    latitude: 59.9311,
    longitude: 30.3609,
    city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
    country: '–†–æ—Å—Å–∏—è',
    interests: ['–¥–∏–∑–∞–π–Ω', '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '—Ç–µ–∞—Ç—Ä', '–º—É–∑–µ–∏', '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'],
    photos: ['https://i.pravatar.cc/400?img=2'],
    maxDistance: 20,
    isPremium: false,
  },
];

export async function runProfileSeeds(dataSource: DataSource): Promise<Profile[]> {
  console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π...');
  
  const profileRepository = dataSource.getRepository(Profile);
  const userRepository = dataSource.getRepository(User);
  const createdProfiles: Profile[] = [];

  for (const profileData of SEED_PROFILES) {
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
    const user = await userRepository.findOne({
      where: { email: profileData.userEmail }
    });

    if (!user) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${profileData.userEmail} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      continue;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å
    const existingProfile = await profileRepository.findOne({
      where: { userId: user.id }
    });

    if (existingProfile) {
      console.log(`‚è≠Ô∏è  –ü—Ä–æ—Ñ–∏–ª—å –¥–ª—è ${profileData.userEmail} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      createdProfiles.push(existingProfile);
      continue;
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    const profile = profileRepository.create({
      userId: user.id,
      name: profileData.name,
      age: profileData.age,
      gender: profileData.gender,
      interestedIn: profileData.interestedIn,
      bio: profileData.bio,
      latitude: profileData.latitude,
      longitude: profileData.longitude,
      city: profileData.city,
      country: profileData.country,
      interests: profileData.interests,
      photos: profileData.photos,
      maxDistance: profileData.maxDistance ?? 50,
      isPremium: profileData.isPremium ?? false,
      isLocationVisible: true,
      lastActive: new Date(),
    });

    const savedProfile = await profileRepository.save(profile);
    createdProfiles.push(savedProfile);
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å: ${profileData.name} (${profileData.city})`);
  }

  console.log(`üë§ –°–æ–∑–¥–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${createdProfiles.length}`);
  return createdProfiles;
}