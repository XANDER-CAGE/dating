import { DataSource } from 'typeorm';
import { runUserSeeds } from './users.seed';
import { runProfileSeeds } from './profiles.seed';
import { runLocationSeeds } from './location.seed';
import { runDemoSeeds } from './demo.seed';

export class DatabaseSeeder {
  constructor(private dataSource: DataSource) {}

  async runAllSeeds() {
    console.log('üå± –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–∏–¥–æ–≤...');
    
    try {
      // –ü–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω! –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –ø–æ—Ç–æ–º –ø—Ä–æ—Ñ–∏–ª–∏
      await runUserSeeds(this.dataSource);
      await runProfileSeeds(this.dataSource); 
      await runLocationSeeds(this.dataSource);
      
      console.log('‚úÖ –í—Å–µ —Å–∏–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∏–¥–æ–≤:', error);
      throw error;
    }
  }

  async runDemoSeeds() {
    console.log('üé¨ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ —Å–∏–¥–æ–≤...');
    await runDemoSeeds(this.dataSource);
  }

  async clearDatabase() {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ—Ä—è–¥–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω—ã–π —Å–æ–∑–¥–∞–Ω–∏—é
    await this.dataSource.query('TRUNCATE TABLE messages CASCADE');
    await this.dataSource.query('TRUNCATE TABLE matches CASCADE');
    await this.dataSource.query('TRUNCATE TABLE swipes CASCADE');
    await this.dataSource.query('TRUNCATE TABLE profiles CASCADE');
    await this.dataSource.query('TRUNCATE TABLE users CASCADE');
    
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞');
  }
}