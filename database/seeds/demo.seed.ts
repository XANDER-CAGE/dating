import { DataSource } from 'typeorm';
import { User } from '../../src/users/entities/user.entity';
import { Profile, Gender, InterestedIn } from '../../src/profiles/entities/profile.entity';
import { Swipe, SwipeAction } from '../../src/swipes/entities/swipe.entity';
import { Match } from '../../src/matches/entities/match.entity';
import { Message, MessageType } from '../../src/chats/entities/message.entity';
import * as bcrypt from 'bcrypt';

// –î–µ–º–æ —Å—Ü–µ–Ω–∞—Ä–∏–π: –∏—Å—Ç–æ—Ä–∏—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –ê–Ω–Ω—ã –∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞
export async function runDemoSeeds(dataSource: DataSource): Promise<void> {
  console.log('üé¨ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ —Å—Ü–µ–Ω–∞—Ä–∏—è...');
  
  const userRepo = dataSource.getRepository(User);
  const profileRepo = dataSource.getRepository(Profile);
  const swipeRepo = dataSource.getRepository(Swipe);
  const matchRepo = dataSource.getRepository(Match);
  const messageRepo = dataSource.getRepository(Message);

  // === –°–û–ó–î–ê–ï–ú –ì–õ–ê–í–ù–´–• –ì–ï–†–û–ï–í ===
  
  // –ê–Ω–Ω–∞ - –≥–ª–∞–≤–Ω–∞—è –≥–µ—Ä–æ–∏–Ω—è
  const annaUser = userRepo.create({
    email: 'anna.demo@dating-app.com',
    passwordHash: await bcrypt.hash('Demo123456', 12),
    phone: '+79991111111',
    isVerified: true,
    isActive: true,
  });
  const savedAnnaUser = await userRepo.save(annaUser);

  const annaProfile = profileRepo.create({
    userId: savedAnnaUser.id,
    name: '–ê–Ω–Ω–∞',
    age: 25,
    gender: Gender.FEMALE,
    interestedIn: InterestedIn.MALE,
    bio: 'üé® –î–∏–∑–∞–π–Ω–µ—Ä –≤ IT –∫–æ–º–ø–∞–Ω–∏–∏. –õ—é–±–ª—é –∫–æ—Ñ–µ, –∫–Ω–∏–≥–∏ –∏ –¥–æ–ª–≥–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ –ú–æ—Å–∫–≤–µ. –ò—â—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.',
    latitude: 55.7558, // –¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã
    longitude: 37.6176,
    city: '–ú–æ—Å–∫–≤–∞',
    country: '–†–æ—Å—Å–∏—è',
    interests: ['–¥–∏–∑–∞–π–Ω', '–∫–æ—Ñ–µ', '–∫–Ω–∏–≥–∏', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–º—É–∑–µ–∏'],
    photos: [
      'https://i.pravatar.cc/400?img=1',
      'https://i.pravatar.cc/400?img=11',
      'https://i.pravatar.cc/400?img=21'
    ],
    maxDistance: 25,
    isPremium: false,
    isLocationVisible: true,
    lastActive: new Date(),
  });
  await profileRepo.save(annaProfile);

  // –ê–ª–µ–∫—Å–∞–Ω–¥—Ä - –∏–¥–µ–∞–ª—å–Ω—ã–π –º–∞—Ç—á
  const alexUser = userRepo.create({
    email: 'alex.demo@dating-app.com',
    passwordHash: await bcrypt.hash('Demo123456', 12),
    phone: '+79992222222',
    isVerified: true,
    isActive: true,
  });
  const savedAlexUser = await userRepo.save(alexUser);

  const alexProfile = profileRepo.create({
    userId: savedAlexUser.id,
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
    age: 28,
    gender: Gender.MALE,
    interestedIn: InterestedIn.FEMALE,
    bio: 'üíª Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –°–æ–∑–¥–∞—é –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –º–æ–±–∏–ª—å–Ω—ã–µ apps. –í —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è —á–∏—Ç–∞—é, –∑–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º –∏ –∏–∑—É—á–∞—é –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.',
    latitude: 55.7522, // –ê—Ä–±–∞—Ç, ~2–∫–º –æ—Ç –ê–Ω–Ω—ã
    longitude: 37.5936,
    city: '–ú–æ—Å–∫–≤–∞',
    country: '–†–æ—Å—Å–∏—è',
    interests: ['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∫–Ω–∏–≥–∏', '—Å–ø–æ—Ä—Ç', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–∫–∏–Ω–æ'],
    photos: [
      'https://i.pravatar.cc/400?img=3',
      'https://i.pravatar.cc/400?img=13',
      'https://i.pravatar.cc/400?img=23'
    ],
    maxDistance: 30,
    isPremium: true,
    isLocationVisible: true,
    lastActive: new Date(),
  });
  await profileRepo.save(alexProfile);

  // === –°–û–ó–î–ê–ï–ú –î–†–£–ì–ò–• –ö–ê–ù–î–ò–î–ê–¢–û–í ===
  
  const otherUsers = [
    {
      name: '–î–º–∏—Ç—Ä–∏–π',
      age: 30,
      bio: 'üèãÔ∏è –§–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä. –ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.',
      lat: 55.7935, lng: 37.6703, // –°–æ–∫–æ–ª—å–Ω–∏–∫–∏, ~7–∫–º
      interests: ['—Å–ø–æ—Ä—Ç', '—Ñ–∏—Ç–Ω–µ—Å', '–∑–¥–æ—Ä–æ–≤—å–µ', '–º–æ—Ç–∏–≤–∞—Ü–∏—è'],
    },
    {
      name: '–ú–∏—Ö–∞–∏–ª',
      age: 26,
      bio: 'üéµ –ú—É–∑—ã–∫–∞–Ω—Ç –∏ –∑–≤—É–∫–æ—Ä–µ–∂–∏—Å—Å–µ—Ä. –ò–≥—Ä–∞—é –Ω–∞ –≥–∏—Ç–∞—Ä–µ.',
      lat: 55.7033, lng: 37.5302, // –ú–ì–£, ~15–∫–º
      interests: ['–º—É–∑—ã–∫–∞', '–≥–∏—Ç–∞—Ä–∞', '–∑–≤—É–∫', '–∫–æ–Ω—Ü–µ—Ä—Ç—ã'],
    },
    {
      name: '–°–µ—Ä–≥–µ–π',
      age: 32,
      bio: 'üìä –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º. –õ—é–±–ª—é –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö.',
      lat: 55.8215, lng: 37.6398, // –í–î–ù–•, ~10–∫–º
      interests: ['–ø—Ä–æ–¥–∞–∂–∏', '–±–∏–∑–Ω–µ—Å', '–∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö', '–º–æ—Ç–æ—Ü–∏–∫–ª—ã'],
    },
  ];

  const createdOtherUsers = [];
  for (let i = 0; i < otherUsers.length; i++) {
    const userData = otherUsers[i];
    
    const user = userRepo.create({
      email: `${userData.name.toLowerCase()}.demo${i}@dating-app.com`,
      passwordHash: await bcrypt.hash('Demo123456', 12),
      phone: `+79993333${String(i).padStart(3, '0')}`,
      isVerified: true,
      isActive: true,
    });
    const savedUser = await userRepo.save(user);

    const profile = profileRepo.create({
      userId: savedUser.id,
      name: userData.name,
      age: userData.age,
      gender: Gender.MALE,
      interestedIn: InterestedIn.FEMALE,
      bio: userData.bio,
      latitude: userData.lat,
      longitude: userData.lng,
      city: '–ú–æ—Å–∫–≤–∞',
      country: '–†–æ—Å—Å–∏—è',
      interests: userData.interests,
      photos: [`https://i.pravatar.cc/400?img=${i + 30}`],
      maxDistance: 25,
      isPremium: i === 0, // –ü–µ—Ä–≤—ã–π - –ø—Ä–µ–º–∏—É–º
      isLocationVisible: true,
      lastActive: new Date(Date.now() - i * 60 * 60 * 1000), // –†–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    });
    await profileRepo.save(profile);
    
    createdOtherUsers.push({ user: savedUser, profile });
  }

  // === –°–û–ó–î–ê–ï–ú –ò–°–¢–û–†–ò–Æ –°–í–ê–ô–ü–û–í ===
  
  console.log('üí´ –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–≤–∞–π–ø–æ–≤...');
  
  // –ê–Ω–Ω–∞ –¥–∏—Å–ª–∞–π–∫–∞–µ—Ç –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö, –ª–∞–π–∫–∞–µ—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞
  const annaSwipes = [
    { target: createdOtherUsers[0].user, action: SwipeAction.DISLIKE },
    { target: createdOtherUsers[1].user, action: SwipeAction.DISLIKE },
    { target: savedAlexUser, action: SwipeAction.LIKE },
  ];

  for (const swipeData of annaSwipes) {
    const swipe = swipeRepo.create({
      swiperId: savedAnnaUser.id,
      swipedId: swipeData.target.id,
      action: swipeData.action,
      createdAt: new Date(Date.now() - Math.random() * 24 * 60 * 60 * 1000), // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    });
    await swipeRepo.save(swipe);
  }

  // –ê–ª–µ–∫—Å–∞–Ω–¥—Ä —Ç–æ–∂–µ –ª–∞–π–∫–∞–µ—Ç –ê–Ω–Ω—É (—Å–æ–∑–¥–∞–µ—Ç—Å—è –º–∞—Ç—á!)
  const alexSwipe = swipeRepo.create({
    swiperId: savedAlexUser.id,
    swipedId: savedAnnaUser.id,
    action: SwipeAction.LIKE,
    createdAt: new Date(Date.now() - 12 * 60 * 60 * 1000), // 12 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
  });
  await swipeRepo.save(alexSwipe);

  // === –°–û–ó–î–ê–ï–ú –ú–ê–¢–ß ===
  
  console.log('üíù –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç—á–∞...');
  
  const match = matchRepo.create({
    user1Id: savedAnnaUser.id,
    user2Id: savedAlexUser.id,
    isActive: true,
    lastMessageAt: new Date(),
    createdAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
  });
  const savedMatch = await matchRepo.save(match);

  // === –°–û–ó–î–ê–ï–ú –î–ò–ê–õ–û–ì ===
  
  console.log('üí¨ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞...');
  
  const messages = [
    {
      senderId: savedAlexUser.id,
      content: '–ü—Ä–∏–≤–µ—Ç, –ê–Ω–Ω–∞! –£–≤–∏–¥–µ–ª, —á—Ç–æ –º—ã –º–∞—Ç—á–Ω—É–ª–∏—Å—å. –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ! üòä',
      timestamp: new Date(Date.now() - 11 * 60 * 60 * 1000),
    },
    {
      senderId: savedAnnaUser.id,
      content: '–ü—Ä–∏–≤–µ—Ç, –ê–ª–µ–∫—Å–∞–Ω–¥—Ä! –î–∞, —Ç–æ–∂–µ –æ—á–µ–Ω—å —Ä–∞–¥–∞! –ü–æ—Å–º–æ—Ç—Ä–µ–ª–∞ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å - —Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫? –≠—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!',
      timestamp: new Date(Date.now() - 10.5 * 60 * 60 * 1000),
    },
    {
      senderId: savedAlexUser.id,
      content: '–î–∞, —Ä–∞–±–æ—Ç–∞—é full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º —É–∂–µ 5 –ª–µ—Ç. –ê —Ç—ã –¥–∏–∑–∞–π–Ω–µ—Ä! –≠—Ç–æ –∂–µ –æ—Ç–ª–∏—á–Ω–æ - –º—ã –º–æ–≥–ª–∏ –±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –≤–º–µ—Å—Ç–µ üòÑ',
      timestamp: new Date(Date.now() - 10 * 60 * 60 * 1000),
    },
    {
      senderId: savedAnnaUser.id,
      content: '–û–≥–æ, —ç—Ç–æ –±—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ! –Ø –≤—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∞ –±–æ–ª—å—à–µ —É–∑–Ω–∞—Ç—å –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ç–∫–µ–Ω–¥. –ê —Ç—ã –≥–¥–µ –≤ –ú–æ—Å–∫–≤–µ –∂–∏–≤–µ—à—å?',
      timestamp: new Date(Date.now() - 9.5 * 60 * 60 * 1000),
    },
    {
      senderId: savedAlexUser.id,
      content: '–†—è–¥–æ–º —Å –ê—Ä–±–∞—Ç–æ–º. –í–∏–∂—É, —Ç—ã –≤ —Ü–µ–Ω—Ç—Ä–µ - –º—ã —Å–æ–≤—Å–µ–º –±–ª–∏–∑–∫–æ! –ú–æ–∂–µ—Ç –±—ã—Ç—å, –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –Ω–∞ –∫–æ—Ñ–µ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö?',
      timestamp: new Date(Date.now() - 9 * 60 * 60 * 1000),
    },
    {
      senderId: savedAnnaUser.id,
      content: '–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! –ó–Ω–∞–µ—à—å —Ö–æ—Ä–æ—à–∏–µ –∫–æ—Ñ–µ–π–Ω–∏ –≤ —Ä–∞–π–æ–Ω–µ –ê—Ä–±–∞—Ç–∞? ‚òï',
      timestamp: new Date(Date.now() - 8.5 * 60 * 60 * 1000),
    },
    {
      senderId: savedAlexUser.id,
      content: '–ö–æ–Ω–µ—á–Ω–æ! –ï—Å—Ç—å –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ - "–ö–æ—Ñ–µ –ö—É–ª—å—Ç" –Ω–∞ –ù–∏–∫–∏—Ç—Å–∫–æ–π. –£—é—Ç–Ω–æ –∏ –∫–æ—Ñ–µ –ø—Ä–æ—Å—Ç–æ –∏–∑—É–º–∏—Ç–µ–ª—å–Ω—ã–π. –ö–∞–∫ —Ç–µ–±–µ —Å—É–±–±–æ—Ç–∞ –≤ 14:00?',
      timestamp: new Date(Date.now() - 8 * 60 * 60 * 1000),
    },
    {
      senderId: savedAnnaUser.id,
      content: '–ó–≤—É—á–∏—Ç –∏–¥–µ–∞–ª—å–Ω–æ! –°—É–±–±–æ—Ç–∞ –≤ 14:00 - –∏–¥–µ–∞–ª—å–Ω–æ. –ë—É–¥—É –∂–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏! üòä',
      timestamp: new Date(Date.now() - 7.5 * 60 * 60 * 1000),
    },
  ];

  for (const msgData of messages) {
    const message = messageRepo.create({
      matchId: savedMatch.id,
      senderId: msgData.senderId,
      content: msgData.content,
      messageType: MessageType.TEXT,
      isRead: msgData.senderId === savedAnnaUser.id, // –ê–Ω–Ω–∞ –ø—Ä–æ—á–∏—Ç–∞–ª–∞ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      readAt: msgData.senderId === savedAnnaUser.id ? new Date() : null,
      createdAt: msgData.timestamp,
    });
    await messageRepo.save(message);
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–∞—Ç—á–µ
  await matchRepo.update(savedMatch.id, {
    lastMessageAt: new Date(Date.now() - 7.5 * 60 * 60 * 1000),
  });

  console.log('üé¨ –î–µ–º–æ —Å—Ü–µ–Ω–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
  console.log('\nüìñ –ò—Å—Ç–æ—Ä–∏—è:');
  console.log('üë© –ê–Ω–Ω–∞ (anna.demo@dating-app.com) - –¥–∏–∑–∞–π–Ω–µ—Ä, 25 –ª–µ—Ç');
  console.log('üë® –ê–ª–µ–∫—Å–∞–Ω–¥—Ä (alex.demo@dating-app.com) - —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, 28 –ª–µ—Ç');
  console.log('üí´ –û–Ω–∏ –º–∞—Ç—á–Ω—É–ª–∏—Å—å –∏ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –≤—Å—Ç—Ä–µ—á—É –≤ –∫–æ—Ñ–µ–π–Ω–µ!');
  console.log('üí¨ –í –∏—Ö –¥–∏–∞–ª–æ–≥–µ 8 —Å–æ–æ–±—â–µ–Ω–∏–π');
  console.log('üìç –ñ–∏–≤—É—Ç –≤ 2–∫–º –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ –≤ –ú–æ—Å–∫–≤–µ');
  console.log('\nüîë –ü–∞—Ä–æ–ª–∏ –¥–ª—è –≤—Ö–æ–¥–∞: Demo123456');
}